" Extend rather than replace Vim 8 defaults
source $VIMRUNTIME/defaults.vim

" Overrides for Git for Windows
set clipboard& wildmode& laststatus& statusline&

" Main options
set hidden
set showmatch hlsearch shortmess-=S
set spell spellcapcheck= complete+=k
set backspace=indent
set autoindent shiftwidth=0 tabstop=4
set ignorecase wildignorecase smartcase
set splitbelow splitright noequalalways
set number cursorline
set linebreak breakindent showbreak=â†³\ \ \ "
set colorcolumn=+1
set printoptions=formfeed:y

" Background detection fails in Windows Terminal
set background=dark

" No undercurl in Windows Terminal or iTerm2, so fallback to underline
set t_Cs=

" Better mouse support
set ttymouse=sgr mouse=a

" More GUI-like behavior
set title belloff=all lazyredraw

" Improve responsiveness and disable swap files (DANGEROUS)
set updatetime=100 noswapfile

" Continuous pane boundary
set fillchars+=vert:â”‚

" Mode-dependent cursor shape
set t_SI=[5\ q t_SR=[3\ q t_EI=[1\ q
autocmd VimLeave * set t_me=[0\ q

" Why isn't this default
nnoremap Y y$

" Shift-less command mode
noremap ; :
tnoremap ; :

" Quick save file without messing up timestamp
nnoremap <silent> , :<C-u>update<CR>

" Quick hide search result highlighting
nnoremap <silent> <BS> :<C-u>noh<CR>

" Speedy buffer switching
nnoremap <Space> <C-^>

" Show buffer menu and prompt
nnoremap <silent> <Leader><Leader> :<C-u>Buffers<CR>

" FZF in the current project (Git repo if present, otherwise whole directory)
nnoremap <expr> <silent> <C-p> FugitiveHead() != '' ? ':<C-u>GFiles<CR>' : ':<C-u>Files<CR>'

" Auto-insert closing bracket for block
inoremap {<CR> {<CR>}<ESC>O

" Insert ASCII underline for headings
nnoremap _ yypVr=o<CR>

" IDE actions
nnoremap <silent> <F2> :<C-u>ALERename<CR>
nnoremap <silent> + :ALECodeAction<CR>
nnoremap <silent> gd :<C-u>ALEGoToDefinition<CR>
nnoremap <silent> gD :<C-u>ALEGoToTypeDefinition<CR>

" Don't need vinegar.vim for this :)
" Also helps to use :Explore rather than :e
let g:netrw_banner = 0

" quick-scope plugin
let g:qs_lazy_highlight = 1

" sneak plugin
let g:sneak#s_next = 1

" traces plugin
let g:traces_preview_window = 'new'

" ALE language server plugin
let g:ale_completion_enabled = 1
let g:ale_fix_on_save = 1

" Extend Vim's built-in output code detection for 24-bit color
if &t_8f == '' && &t_8b == ''
	set t_8f=[38;2;%lu;%lu;%lum
	set t_8b=[48;2;%lu;%lu;%lum
endif

" Detect 24-bit color according to https://gist.github.com/XVilka/8346728
if $COLORTERM =~? 'truecolor\|24bit' | set t_Co=16777216 | endif

" Use 24-bit color whenever available; the colorscheme MUST define GUI colors
if &t_Co >= 16777216 | set termguicolors | endif

" Color scheme that matches terminal (One Half Dark)
let g:one_allow_italics = 1
colorscheme one

" Without undercurl, color must be set manually (this is orange from One Dark)
call one#highlight('SpellBad', 'd19a66', '', '')
call one#highlight('SpellCap', 'd19a66', '', '')
call one#highlight('SpellLocal', 'd19a66', '', '')
call one#highlight('SpellRare', 'd19a66', '', '')
