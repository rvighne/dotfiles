# Start non-login shells
set -g default-command "${SHELL}"

# Allow programs to use 8-bit and/or 24-bit color
set -s default-terminal tmux-256color
setenv -g COLORTERM truecolor

# Assume xterm-256color (outside tmux) is capable of true color
set -as terminal-overrides ',xterm-256color*:Tc'

# Set clipboard in a way mosh can detect and pass through
set -as terminal-overrides ",xterm*:XT:Ms=\\E]52;c;%p2%s\\7"

# Make status line legible (but monochrome) on any background
set -g status-style reverse

# Always show hostname and datetime
set -g status-right '%T  %a %Y%m%d  [#H]  '
set -g status-right-length 64
set -g status-interval 1

# Keep status message visible until a key is pressed
set -g display-time 0

# Much more generous scrollback; can use excessive RAM
set -g history-limit 32767

# Prevent delay after ESC which interferes with Vim
set -s escape-time 0

# Better integration with terminal
set -s focus-events on
set -s set-clipboard on
set -g set-titles on
set -g mouse on

# Use readline-style input for tmux command line
set -g status-keys emacs

# Detachable popup window with user-defined interactive calculator
set -qg popup-border-lines rounded
bind C-g if -F '#{!=:#S,popup}' 'popup -EE tmux new -As popup calc.sh' 'detach'

# Switch panes without prefix and prevent wrap-around
bind -n M-h if -F '#{pane_at_left}'   '' 'select-pane -L'
bind -n M-j if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind -n M-k if -F '#{pane_at_top}'    '' 'select-pane -U'
bind -n M-l if -F '#{pane_at_right}'  '' 'select-pane -R'

# Create panes without prefix in specified direction
bind -n M-H split-window -hb
bind -n M-J split-window -v
bind -n M-K split-window -vb
bind -n M-L split-window -h

# Switch windows without prefix
bind -n M-n select-window -n
bind -n M-p select-window -p

# Create windows without prefix
bind -n M-N new-window
bind -n M-P new-window

# Make copy-mode-vi more similar to vi
bind   -T copy-mode-vi v     send -X begin-selection
bind   -T copy-mode-vi C-v   send -X rectangle-toggle
bind   -T copy-mode-vi Enter send -X cursor-down
bind   -T copy-mode-vi y     send -X copy-selection-and-cancel
bind   -T copy-mode-vi Y     send -X copy-line
unbind -T copy-mode-vi A     # append-selection-and-cancel

# Do not reset scroll position after a (possibly accidental) mouse selection
bind -T copy-mode-vi MouseDragEnd1Pane \
	if -F '#{scroll_position}' \
		'send -X copy-selection' \
		'send -X copy-selection-and-cancel'
